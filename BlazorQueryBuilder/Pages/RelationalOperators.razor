@using System.Linq.Expressions
@using MudBlazor

<MudSelect T="string" Label="Select Operator" @bind-Value="SelectedOperator">
    @foreach (var item in Operators)
    {
        <MudSelectItem Value="@item.Key">@item.Value</MudSelectItem>
    }
</MudSelect>

@code {
    Dictionary<string, string> Operators = new Dictionary<string, string>
    {
        {"Equal", "Equals"},
        {"NotEqual", "Does not equal"},
        {"LessThan", "Less than"},
        {"GreaterThan", "Greater than"},
        // TODO: Implement these operators
        // {"InList", "In List"},
        // {"NotInList", "Not In List"},
    };

    [Parameter]
    public Action<ExpressionType> OnChange { get; set; }

    [Parameter]
    public ExpressionType ExpressionType { get; set; }

    private string SelectedOperator
    {
        get => ExpressionType.ToString();
        set
        {
            var expressionType = (ExpressionType)Enum.Parse(typeof(ExpressionType), value);
            ExpressionType = expressionType;
            OnChange.Invoke(expressionType);
        }
    }
}